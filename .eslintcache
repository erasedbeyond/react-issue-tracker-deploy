[{"/home/shivendra/Documents/react-issue-deploy/src/index.js":"1","/home/shivendra/Documents/react-issue-deploy/src/component/App.js":"2","/home/shivendra/Documents/react-issue-deploy/src/component/Projects.js":"3","/home/shivendra/Documents/react-issue-deploy/src/component/Header.js":"4","/home/shivendra/Documents/react-issue-deploy/src/component/Issues.js":"5","/home/shivendra/Documents/react-issue-deploy/src/component/RaiseIssue.js":"6","/home/shivendra/Documents/react-issue-deploy/src/component/IssueFilter.js":"7","/home/shivendra/Documents/react-issue-deploy/src/assets/file/ProjectData.js":"8","/home/shivendra/Documents/react-issue-deploy/src/assets/file/IssueData.js":"9"},{"size":208,"mtime":1611431287612,"results":"10","hashOfConfig":"11"},{"size":743,"mtime":1611603688460,"results":"12","hashOfConfig":"11"},{"size":3740,"mtime":1611640557575,"results":"13","hashOfConfig":"11"},{"size":405,"mtime":1611639391683,"results":"14","hashOfConfig":"11"},{"size":7330,"mtime":1611639292111,"results":"15","hashOfConfig":"11"},{"size":5329,"mtime":1611609303303,"results":"16","hashOfConfig":"11"},{"size":3679,"mtime":1611639181571,"results":"17","hashOfConfig":"11"},{"size":1542,"mtime":1611639565955,"results":"18","hashOfConfig":"11"},{"size":6024,"mtime":1611640995591,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"pyytyd",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/shivendra/Documents/react-issue-deploy/src/index.js",[],["45","46"],"/home/shivendra/Documents/react-issue-deploy/src/component/App.js",["47"],"import Header from './Header'\nimport Projects from './Projects'\nimport Issues from './Issues'\nimport '../css/App.css'\nimport React,{ useState } from 'react'\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      tab:true\n    }\n  }\n\n  setTab =(e)=>{\n\n    var val =  e.target.getAttribute('setTab');\n    if(val==='issue')\n    this.setState({\n      tab:false\n    }) \n    if(val==='project')\n    this.setState({\n      tab:true\n    })\n  }\n\n  render(){\n    return (\n\n      <div className=\"app\">\n      <Header setTab={this.setTab}/>\n      <div className='app-main'>{this.state.tab? \n          <Projects setTab={this.setTab}/>: \n          <Issues/>\n        }</div>\n      </div>\n    );\n  }\n \n}\n\nexport default App;\n","/home/shivendra/Documents/react-issue-deploy/src/component/Projects.js",["48","49","50","51","52"],"import React from 'react';\nimport '../css/Projects.css';\nimport link from '../assets/icon/link.svg';\n\nimport developer from '../assets/icon/developer.svg';\nimport img from '../assets/images/react.png'\nimport project from '../assets/icon/project.svg'\n\nimport {ProjectData} from '../assets/file/ProjectData';\n\n\nclass Projects extends React.Component{\n\n    constructor(){\n        super();\n        this.state ={\n            ProjectData:ProjectData,\n            name:'',\n            description:'',\n            author:''\n        }\n    }\n\n\n    // handleChange = (event) => {\n    //     const { target: { name, value } } = event\n    //     this.setState({ [name]: value })\n    // }\n\n    setProjectDetail= (e) =>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n    \n    handleSubmit = (event) => {\n        event.preventDefault();\n        const data = {\n            name:this.state.name,\n            description:this.state.description,\n            link:'https://reactjs.org/docs/getting-started.html',\n            img:img,\n            author:this.state.author\n\n        }\n        this.setState({\n            ProjectData:[...this.state.ProjectData,data]\n        })\n\n        document.getElementById('add-project').reset()\n\n\n    }\n      \n      \n    render(){\n        return(\n\n            <div className='projects'>\n                <form id='add-project' onSubmit={this.handleSubmit} >\n\n                    <div className='paper-handle'></div>\n\n                    <h2>Add More Project</h2>\n                    <label>\n                        <h3>Tittle:</h3>\n                        <input type='text' name='name' placeholder='Name of the project' onChange={this.setProjectDetail} required/>\n                    </label>\n                    <label>\n                        <h3>Description:</h3>\n                        <textarea name='description' placeholder='Write description about the project.' onChange={this.setProjectDetail} required/>\n                   \n                    </label>\n                     <label>\n                        <h3>Author:</h3>\n                        <input type='text' name='author' placeholder='Author' onChange={this.setProjectDetail} required/>\n                    </label>\n                    <input className='button add-project-btn' type='submit' value='Add Project' />\n\n\n\n                </form>\n                 <div className='projects-section'>\n                    {this.state.ProjectData.map((item,index)=>(<div className='project-container'  key={index}>\n                        <div className='project-name'><img className='svg-medium' src={project} /> {item.name}</div>\n                        <div className='project-description'>\n                            <h4>Description: </h4>\n                            <div><span>{item.description}</span></div>\n                        </div>\n                        <div className='project-image' setTab='issue' onClick={this.props.setTab}>\n                            <img setTab='issue' onClick={this.props.setTab} src={item.img}/>\n                        </div>\n                        <div className='project-link'>\n                            <a target='_blank' href={item.link}>{item.link.slice(8)}</a>\n                            <img className='svg' src={link} />\n                        </div>\n                        <div className='project-author'>\n                            <img className='svg' src={developer}/>\n                            <span>{item.author}</span>\n                        </div>\n                        \n                        \n                        \n                    </div>))}\n                </div>\n\n            </div>\n\n           \n        );\n    }\n    \n}\n\nexport default Projects;","/home/shivendra/Documents/react-issue-deploy/src/component/Header.js",["53"],"import React from 'react';\nimport home from '../assets/icon/home.svg'\nimport '../css/Header.css'\n\n\nclass Header extends React.Component{\n    render(){\n        return(\n            <div className='header'>\n                <img id='home' src={home} setTab='project' onClick={this.props.setTab} />\n                <h1>React Issue Tracker</h1>\n            </div>\n        );\n    }\n    \n}\n\nexport default Header;","/home/shivendra/Documents/react-issue-deploy/src/component/Issues.js",["54"],"import React from 'react';\nimport {IssueData} from '../assets/file/IssueData';\nimport RaiseIssue from './RaiseIssue'\nimport '../css/Issues.css'\nimport IssueFilter from './IssueFilter'\nimport exclamation from '../assets/icon/exclamation.svg'\n\n\n\nclass Issues extends React.Component{\n\n\n    constructor(){\n        super();\n        this.state = {\n\n            issueData:IssueData,\n\n            //to filter\n            type:[],\n            priority:[],\n            progress:[],\n            author:'',\n            search:'',\n            tags:[],\n            sort:'',\n\n            //switch between tabs\n            issueTab:false,\n\n            //to store\n            allAuthor:[],\n            allTags:[],\n        }\n    }\n\n    setFilter =(e)=>{\n\n        if(e.target.checked)\n            this.setState({\n                [e.target.name]:[...this.state[e.target.name],e.target.value]\n            })\n        else{ \n            this.setState({\n                [e.target.name]:this.state[e.target.name].filter((item)=> item!==e.target.value)\n            })\n        }\n    }\n\n    addIssue = (e) =>{\n\n        e.number = this.state.issueData.length+1;\n        e.createdAt = Date.now();\n        console.log(e);\n        this.setState({\n            issueData:[...this.state.issueData,e]\n        },this.gettingAllTagsAndAuthor) //adding issue and updating tag and author array\n    }\n\n    setAuthor = (e)=>{\n        e.preventDefault();\n        this.setState({\n            author:e.target.value\n        })\n    }\n    setSearch = (e) =>{\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    gettingAllTagsAndAuthor = () =>{\n        const allAuthor=[];\n        const allTags=[];\n        this.state.issueData.forEach((item)=>{\n            allAuthor.push(item.author);\n            allTags.push.apply(allTags,item.tags)\n           \n        })\n        const allAuthorSet =new Set(allAuthor);\n        const allTagsSet =new Set(allTags);\n        this.setState({\n            allAuthor:[...allAuthorSet],\n            allTags:[...allTagsSet]\n        })\n\n    }\n\n    toggle = (e)=>{\n        if(e.target.value==='issue-page')\n            this.setState({\n                issueTab:false\n            })\n        if(e.target.value==='raise-issue')\n            this.setState({\n                issueTab:true\n            })\n    }\n\n    componentDidMount(){\n        this.gettingAllTagsAndAuthor()\n       \n    }\n\n    render(){\n        var filters = {\n            type: this.state.type,\n            progress: this.state.progress,\n            priority: this.state.priority\n        }\n        const filterKeys = Object.keys(filters);\n\n        const finalData = this.state.issueData.filter(\n            (eachObj)=>{\n                //some and every method for array or object, some is used when even one value is passed true, and every is used to pass all the values as true \n                return filterKeys.every( //return true and false\n                    (eachKey)=>{\n                        if (!filters[eachKey].length) {\n                            return true; \n                        }\n                       return filters[eachKey].includes(eachObj['labels'][eachKey]) //return true and fasle\n                    }\n                ) \n                // &&  (this.state.tags.every((value)=>eachObj['tags'].indexOf(value)!==-1) ) //to have every tags\n                &&  (this.state.tags.length ===0 || this.state.tags.some((value)=>eachObj['tags'].indexOf(value)!==-1) ) //to have one of the tags\n                &&  (!this.state.author || eachObj.author === this.state.author)\n                &&  (!this.state.search || eachObj.title.toLowerCase().includes(this.state.search) || eachObj.description.toLowerCase().includes(this.state.search))\n            }\n        )\n\n            // finalData.sort((a,b)=> a.number-b.number);\n            console.log(this.state.sort);\n            if(this.state.sort==='ascending'){\n                finalData.sort((a,b)=> a.number-b.number);\n            }\n\n            if(this.state.sort==='descending'){\n                finalData.sort((a,b)=> b.number-a.number);\n            }\n\n\n        \n        return(\n\n            <div className='issues'>\n\n            {\n                this.state.issueTab ? \n\n                <RaiseIssue \n                    addIssue={this.addIssue}\n                    toggle={this.toggle}\n                /> :\n\n                <div className='issues-main'>\n\n                    <div className='issues-main-heading'>\n                            <h2>Issues Page</h2>   \n                            <input name='search' onChange={this.setSearch} placeholder='Search issue via tittle or description'/>\n\n                            <button className=\"button raise-issue-button\" value='raise-issue' onClick={this.toggle}>Raise an Issues</button>\n                        </div> \n                    <div className='issues-main-container'>\n\n\n                        <div className='issue-block'>\n                            \n                            <div className='issue-block-container'>\n                                {finalData.map((item,index)=>(<div className='issues-container-main'>\n                                    \n                                    <div className='issues-container'>\n                                        <div className='issue-serial-number'>\n                                            <img className='issue-svg' src={exclamation}/>\n                                            <span>#{item.number}</span>\n                                        </div>\n                                        <div className='issue-title'>{item.title}</div>\n                                        \n                                        <div className='issue-labels'>\n                                            <div className={item.labels.type+' label-tag-block'}>{item.labels.type}</div>\n                                            <div className={item.labels.progress+' label-tag-block'}>{item.labels.progress}</div>\n                                            <div className={item.labels.priority+' label-tag-block'}>{item.labels.priority}</div>\n                                        </div>\n                                        <div className='issue-author'>{item.author}</div>\n\n                                    </div>\n                                    <div className='issue-description'>\n                                        <div className='description-detail'>{item.description}</div>\n                                        <div className='description-tag'>{item.tags.map((tag)=>(<span>#{tag} </span>))}</div>\n                                    </div>\n                                    \n                                </div>))}\n                            </div>\n                        </div>\n                    \n\n                        <IssueFilter \n                            allAuthor={this.state.allAuthor} \n                            allTags={this.state.allTags} \n                            setFilter={this.setFilter}\n                            setAuthor={this.setAuthor}\n                            setSearch={this.setSearch}\n                            \n                        />\n                    </div>\n                </div>\n                \n            }\n            </div>\n        );\n    }\n    \n}\n\nexport default Issues;","/home/shivendra/Documents/react-issue-deploy/src/component/RaiseIssue.js",[],["55","56"],"/home/shivendra/Documents/react-issue-deploy/src/component/IssueFilter.js",["57","58"],"import React from 'react';\nimport ascending from '../assets/icon/ascending.svg'\nimport descending from '../assets/icon/descending.svg'\n\n\n\nclass Projects extends React.Component{\n\n    render(){\n        return(\n\n            <div className='issue-filter'>\n\n            <div className='issue-sorting'>\n                <h3>Sort by Issue Number</h3>\n                <label> \n                    <input type='submit' value='ascending' name='sort'  onClick={this.props.setSearch}/><br/>\n                    <img className='svg' src={ascending} />\n\n                </label>\n                <label> \n                    <input type='submit' value='descending' name='sort'  onClick={this.props.setSearch}/><br/>\n              \n                    <img className='svg' src={descending}/>\n                </label>\n            </div>\n\n            <div className='filter-by-type'>\n                <h3>Filter by Type</h3>\n                <label> Bug \n                    <input type='checkbox' value='bug' name='type'  onChange={this.props.setFilter}/><br/>\n                </label>\n                <label> Features\n                    <input type='checkbox' value='features' name='type'  onChange={this.props.setFilter}/><br/>\n                </label>\n                <label> Error\n                    <input type='checkbox' value='error' name='type' onChange={this.props.setFilter} />\n                </label>\n            </div>\n\n            <div className='filter-by-progress'>\n                <h3>Filter by Progress</h3>\n                <label> New\n                    <input type='checkbox' value='new' name='progress' onChange={this.props.setFilter} /><br/>\n                </label>\n                <label> In progress\n                    <input type='checkbox' value='in-progress' name='progress'  onChange={this.props.setFilter}/><br/>\n                </label>\n                <label> On hold\n                    <input type='checkbox' value='on-hold' name='progress' onChange={this.props.setFilter} /><br/>\n                </label>\n                <label> Closed\n                    <input type='checkbox' value='closed' name='progress' onChange={this.props.setFilter} />\n                </label>\n            </div>\n\n            <div className='filter-by-priority'>\n                <h3>Filter by priority</h3>\n                <label> High\n                    <input type='checkbox' value='high' name='priority'  onChange={this.props.setFilter}/><br/>\n                </label>\n                <label> Medium\n                    <input type='checkbox' value='medium' name='priority'  onChange={this.props.setFilter}/><br/>\n                </label>\n                <label> Low\n                    <input type='checkbox' value='low' name='priority' onChange={this.props.setFilter} />\n                </label>\n            </div>\n\n            <div className='filter-by-author'>\n                <h3>Filter by Author</h3>\n                <select onChange={this.props.setAuthor}>\n                    <option value='' selected>Choose author</option>\n                    {this.props.allAuthor.map((author,index)=>(<option value={author}>\n                        {author}\n                    </option>))}\n                </select>\n            </div>\n\n            <div className='filter-by-tags'>\n                <h3>Filter by Tags</h3>\n                <div>\n                    {this.props.allTags.map((tag,index)=>(<label>{tag}\n                        <input type='checkbox' name='tags' value={tag} onChange={this.props.setFilter}/>\n                    </label>))}   \n                </div>        \n            </div>\n\n        </div>\n\n\n           \n        );\n    }\n    \n}\n\nexport default Projects;","/home/shivendra/Documents/react-issue-deploy/src/assets/file/ProjectData.js",[],"/home/shivendra/Documents/react-issue-deploy/src/assets/file/IssueData.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":5,"column":16,"nodeType":"65","messageId":"66","endLine":5,"endColumn":24},{"ruleId":"67","severity":1,"message":"68","line":85,"column":55,"nodeType":"69","endLine":85,"endColumn":99},{"ruleId":"67","severity":1,"message":"68","line":91,"column":29,"nodeType":"69","endLine":91,"endColumn":93},{"ruleId":"70","severity":1,"message":"71","line":94,"column":29,"nodeType":"69","endLine":94,"endColumn":65},{"ruleId":"67","severity":1,"message":"68","line":95,"column":29,"nodeType":"69","endLine":95,"endColumn":63},{"ruleId":"67","severity":1,"message":"68","line":98,"column":29,"nodeType":"69","endLine":98,"endColumn":67},{"ruleId":"67","severity":1,"message":"68","line":10,"column":17,"nodeType":"69","endLine":10,"endColumn":90},{"ruleId":"67","severity":1,"message":"68","line":173,"column":45,"nodeType":"69","endLine":173,"endColumn":91},{"ruleId":"59","replacedBy":"72"},{"ruleId":"61","replacedBy":"73"},{"ruleId":"67","severity":1,"message":"68","line":18,"column":21,"nodeType":"69","endLine":18,"endColumn":60},{"ruleId":"67","severity":1,"message":"68","line":24,"column":21,"nodeType":"69","endLine":24,"endColumn":60},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["74"],["75"],"no-global-assign","no-unsafe-negation"]